{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Just Order Api",
    "description" : "An API to create and retrieve Food items and orders.",
    "contact" : {
      "email" : "john.doe@somecomp.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/VinodhThiagarajan1309/just-orders-api/1.0.0",
    "description" : "This is a mocked Out of the Box OAS server. Swap this once the prod url is ready."
  } ],
  "tags" : [ {
    "name" : "orders",
    "description" : "Operations Dealing with Orders"
  }, {
    "name" : "items",
    "description" : "Operations Dealing with Items"
  }, {
    "name" : "3rd-Party",
    "description" : "Operations allowed for 3rd party developers"
  } ],
  "paths" : {
    "/item" : {
      "get" : {
        "tags" : [ "items", "3rd-Party" ],
        "description" : "Get the List of Food items from the system.",
        "operationId" : "get-v1-item-list",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "description" : "returns this number of entities",
            "enum" : [ 10, 100 ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of recently added food items will be returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Item"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "The Submitted Request is Malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestMadeModel"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "items" ],
        "description" : "Create a Food item",
        "operationId" : "create-v1-item",
        "requestBody" : {
          "description" : "Request Body for Creating a Food item.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewItemRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The Food item will be Returned with the generated UUID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Item"
                }
              }
            }
          },
          "400" : {
            "description" : "The Submitted Request is Malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestMadeModel"
                }
              }
            }
          }
        }
      }
    },
    "/item/{itemId}" : {
      "get" : {
        "tags" : [ "items", "3rd-Party" ],
        "description" : "Get 1 item based on a UUID",
        "operationId" : "get-v1-item",
        "parameters" : [ {
          "name" : "itemId",
          "in" : "path",
          "description" : "The UUID of the Item that needs to be retreived.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful retrieval of the Item",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Item"
                }
              }
            }
          },
          "400" : {
            "description" : "The Submitted Request is Malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestMadeModel"
                }
              }
            }
          }
        }
      }
    },
    "/order" : {
      "get" : {
        "tags" : [ "orders", "3rd-Party" ],
        "description" : "Get the List of order from the system.",
        "operationId" : "get-v1-order-list",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "description" : "returns this number of entities",
            "enum" : [ 10, 100 ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of recently added orders  will be returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Order"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "The Submitted Request is Malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestMadeModel"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "orders" ],
        "description" : "Create an order with a list of Line Items",
        "operationId" : "create-v1-order",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewOrderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The Order will be Returned with the generated UUID and all the billing details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          },
          "400" : {
            "description" : "The Submitted Request is Malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestMadeModel"
                }
              }
            }
          }
        }
      }
    },
    "/order/{orderId}" : {
      "get" : {
        "tags" : [ "orders", "3rd-Party" ],
        "description" : "Get 1 order based on a UUID",
        "operationId" : "get-v1-order",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "The UUID of the Order that needs to be retreived.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful retrieval of the Order",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          },
          "400" : {
            "description" : "The Submitted Request is Malformed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestMadeModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Item" : {
        "title" : "Item",
        "required" : [ "itemId" ],
        "type" : "object",
        "properties" : {
          "itemId" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "This is the Unique Identifier for a Item Sold",
            "format" : "uuid",
            "example" : "907ca62f-33e0-46fd-aebb-5eb59a2bc379"
          }
        },
        "description" : "Item Defines a Food Item, the price of the item and its unique Id",
        "example" : {
          "itemId" : "907ca62f-33e0-46fd-aebb-5eb59a2bc379"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/NewItemRequest"
        } ]
      },
      "NewItemRequest" : {
        "required" : [ "itemName", "itemPrice" ],
        "type" : "object",
        "properties" : {
          "itemName" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Name of the Food item.",
            "example" : "Diet Coke"
          },
          "itemPrice" : {
            "maximum" : 10.0,
            "minimum" : 0.01,
            "type" : "string",
            "description" : "Price of the item.",
            "format" : "currency",
            "example" : "2.99"
          }
        },
        "description" : "A Request to Create a Food Item in the system."
      },
      "BadRequestMadeModel" : {
        "type" : "object",
        "properties" : {
          "domainDocs" : {
            "type" : "string",
            "format" : "uri",
            "example" : "https://app.swaggerhub.com/domains/VinodhThiagarajan1309/just-orders/1.0.0"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ErrorModel"
        } ]
      },
      "ErrorModel" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "Order" : {
        "title" : "Order",
        "maxProperties" : 1,
        "required" : [ "lineItems", "orderId", "orderSubTotal", "salesTax", "total" ],
        "type" : "object",
        "properties" : {
          "orderId" : {
            "type" : "string",
            "description" : "Identifier of the Placed order",
            "format" : "uuid",
            "example" : "02e4d444-1997-49e7-b287-a496c41d73d6"
          },
          "lineItems" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "List of Items submitted in this Order",
            "items" : {
              "$ref" : "#/components/schemas/LineItem"
            }
          },
          "orderSubTotal" : {
            "type" : "number",
            "description" : "Total of the Items without Tax",
            "format" : "currency",
            "example" : 12.88
          },
          "salesTax" : {
            "type" : "number",
            "description" : "Sales Tax for this order",
            "format" : "currency",
            "example" : 0.65
          },
          "total" : {
            "type" : "number",
            "description" : "Order Total including Tax",
            "format" : "currency",
            "example" : 13.53
          }
        },
        "additionalProperties" : false,
        "description" : "An Order is created with unique Id, subtotal, tax and Grand Total along with the items that were added.",
        "example" : {
          "lineItems" : [ {
            "itemId" : "a72419bc-0991-456b-90e2-af648bfeb37c",
            "quantity" : 4,
            "itemPrice" : 2.99
          }, {
            "itemId" : "a72419bc-0991-456b-90e2-af648bfeb37c",
            "quantity" : 4,
            "itemPrice" : 2.99
          } ],
          "total" : 13.53,
          "orderId" : "02e4d444-1997-49e7-b287-a496c41d73d6",
          "salesTax" : 0.65,
          "orderSubTotal" : 12.88
        }
      },
      "LineItem" : {
        "type" : "object",
        "properties" : {
          "itemId" : {
            "type" : "string",
            "description" : "The Id of the item in the order",
            "format" : "uuid",
            "example" : "a72419bc-0991-456b-90e2-af648bfeb37c"
          },
          "itemPrice" : {
            "type" : "number",
            "description" : "The price of single line item.",
            "format" : "currency",
            "example" : 2.99
          },
          "quantity" : {
            "maximum" : 10,
            "minimum" : 1,
            "type" : "number",
            "description" : "The number of items of this kind",
            "example" : 4
          }
        },
        "description" : "List of Items that makes this order and their quantities.",
        "example" : {
          "itemId" : "a72419bc-0991-456b-90e2-af648bfeb37c",
          "quantity" : 4,
          "itemPrice" : 2.99
        }
      },
      "NewOrderRequest" : {
        "type" : "array",
        "description" : "List of Items that makes this order.",
        "items" : {
          "$ref" : "#/components/schemas/LineItem"
        }
      }
    }
  }
}
